{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/meals-overview/meals-overview.component.ts","./src/app/meals-overview/meals-overview.component.html","./src/app/meals/meals-routing.module.ts","./src/app/meals/meals.module.ts","./src/app/meals/meals.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  // {\r\n  //   path: 'add-dish',\r\n  //   loadChildren: () => import('./dishes/dishes-routing.module').then(m => m.DishesRoutingModule)\r\n  // },\r\n  {\r\n    path: 'dashboard',\r\n    loadChildren: () => import('./meals/meals-routing.module').then(m => m.MealsRoutingModule)\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'dashboard',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: ''\r\n}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'food-front';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n// import { DishesModule } from './dishes/dishes.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MealsModule } from './meals/meals.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MealsModule,\r\n    // DishesModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// import { DishesService } from '../dishes/dishes.service';\r\nimport { MealsService } from '../meals/meals.service';\r\n\r\n@Component({\r\n  selector: 'app-meals-overview',\r\n  templateUrl: './meals-overview.component.html',\r\n  styleUrls: ['./meals-overview.component.scss']\r\n})\r\nexport class MealsOverviewComponent implements OnInit {\r\n  mealsList: any = [];\r\n  dishesList = {}\r\n  ingredientsList;\r\n  isDishesListOpen = false;\r\n  addDishForm: FormGroup;\r\n  responseMessage;\r\n  isIngredientListOpen = false;\r\n  isAddDishFormOpen = false;\r\n  private selectedDailyMealsId;\r\n  private selectedMealType: string;\r\n\r\n  constructor(\r\n    private mealsService: MealsService, \r\n    private fb: FormBuilder\r\n    // private dishesService: DishesService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    this.getAllMeals();\r\n  }\r\n\r\n  onShowHideDishesList(meal?, mealType?) {\r\n    if(meal && mealType) {\r\n      this.selectedDailyMealsId = meal._id;\r\n      this.selectedMealType = mealType\r\n  \r\n      this.mealsService.getAllDishes().subscribe(data => {\r\n        this.dishesList = data;\r\n        \r\n      })\r\n    }\r\n    this.isDishesListOpen = !this.isDishesListOpen\r\n  }\r\n\r\n  onSelectDish(dish) {\r\n    this.saveOrUpdateDailyMeals(dish.name)\r\n  }\r\n\r\n  onDishSave() {\r\n    if (this.addDishForm.valid) {\r\n      const newDish = {\r\n        name: this.addDishForm.controls['name'].value,\r\n        ingredients: (this.addDishForm.controls['ingredients'].value).split(',')\r\n      }\r\n      console.log(newDish)\r\n      this.mealsService.addDish(newDish).subscribe(response => {\r\n        this.responseMessage = response.body\r\n        console.log(response.body)\r\n        this.addDishForm.reset();\r\n        setTimeout(() => this.responseMessage = '', 3000);\r\n      })\r\n    }\r\n  }\r\n\r\n  onOpenCloseIngredientList() {\r\n    this.isIngredientListOpen = !this.isIngredientListOpen;\r\n  }\r\n\r\n  onShowHideAddDishForm() {\r\n    this.isAddDishFormOpen = !this.isAddDishFormOpen;\r\n  }\r\n\r\n  private initForm() {\r\n    this.addDishForm = this.fb.group(\r\n        {\r\n          name: ['', [\r\n            Validators.required,\r\n            Validators.pattern('^[a-zA-Z]*$')\r\n          ]],\r\n          ingredients: [[], [\r\n            Validators.required,\r\n            // Validators.pattern('^[a-zA-Z]*$')\r\n          ]]\r\n        },\r\n    );\r\n}\r\n\r\n  private getAllMeals() {\r\n    this.mealsService.getAllMeals().subscribe(data => {\r\n      this.mealsList = data;\r\n    });\r\n\r\n    this.getAllIngredients();\r\n  }\r\n\r\n  private saveOrUpdateDailyMeals(dish?) {\r\n    const dailyMeals = {\r\n      id: this.selectedDailyMealsId,\r\n      [this.selectedMealType]: dish\r\n    }\r\n\r\n    console.log(dailyMeals)\r\n\r\n    this.mealsService.saveMealsOrUpdate(dailyMeals).subscribe();\r\n    this.getAllMeals();\r\n    this.isDishesListOpen = false\r\n  }\r\n\r\n  private getAllIngredients() {\r\n    this.mealsService.getIngredientList().subscribe(data => {\r\n      this.ingredientsList = data;\r\n    })\r\n  }\r\n\r\n  \r\n}\r\n","<div class=\"header-container margin-top margin-bottom\">\r\n    <button class=\"btn-action\" (click)=\"onShowHideAddDishForm()\">Dodaj nowe danie</button>\r\n</div>\r\n\r\n<div class=\"meals-overview-container\">\r\n    <div class=\"table-header\">\r\n        <div class=\"table-row\">\r\n            <div class=\"col-date\">data</div>\r\n            <div class=\"col-breakfast\">śniadanie</div>\r\n            <div class=\"col-lunch\">obiad</div>\r\n            <div class=\"col-dinner\">kolacja</div>\r\n            <div class=\"col-snacks\">podjadanie</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"table-data\" *ngIf=\"mealsList\">\r\n        <ng-container *ngFor=\"let meal of mealsList\">\r\n            <div class=\"table-row\">\r\n                <div class=\"col-date\">{{ meal.date }}</div>\r\n                <ng-container *ngTemplateOutlet=\"meal.breakfast ? breakfast : noMeal; context: {meal:meal, mealType: 'breakfast'}\"></ng-container>\r\n                <ng-container *ngTemplateOutlet=\"meal.lunch ? lunch : noMeal; context: {meal:meal, mealType: 'lunch'}\"></ng-container>\r\n                <ng-container *ngTemplateOutlet=\"meal.dinner ? dinner : noMeal; context: {meal:meal, mealType: 'dinner'}\"></ng-container>\r\n                <ng-container *ngTemplateOutlet=\"meal.snacks ? snacks : noMeal; context: {meal:meal, mealType: 'snacks'}\"></ng-container>\r\n            </div>\r\n            <ng-template #breakfast let-mealType=\"mealType\">\r\n                <div class=\"col-breakfast pointer\" (click)=\"onShowHideDishesList(meal, mealType)\">{{ meal.breakfast }}</div>\r\n            </ng-template>\r\n            <ng-template #lunch let-mealType=\"mealType\">\r\n                <div class=\"col-lunch pointer\" (click)=\"onShowHideDishesList(meal, mealType)\">{{ meal.lunch }}</div>\r\n            </ng-template>\r\n            <ng-template #dinner let-mealType=\"mealType\">\r\n                <div class=\"col-dinner pointer\" (click)=\"onShowHideDishesList(meal, mealType)\">{{ meal.dinner }}</div>\r\n            </ng-template>\r\n            <ng-template #snacks let-mealType=\"mealType\">\r\n                <div class=\"col-snacks pointer\" (click)=\"onShowHideDishesList(meal, mealType)\">{{ meal.snacks }}</div>\r\n            </ng-template>\r\n            <ng-template #noMeal let-mealType=\"mealType\">\r\n                <div class=\"pointer\" (click)=\"onShowHideDishesList(meal, mealType)\">+</div>\r\n            </ng-template>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"isAddDishFormOpen\" class=\"main-container popup\">\r\n    <div class=\"box-shadow margin-bottom add-dish-container\">\r\n        <form [formGroup]=\"addDishForm\">\r\n            <div class=\"form-group margin-bottom\">\r\n                <label for=\"name\">\r\n                    Name\r\n                </label>\r\n                <input\r\n                    formControlName=\"name\"\r\n                    class=\"form-control\"\r\n                />\r\n            </div>\r\n            <div class=\"form-group margin-bottom\">\r\n                <label for=\"ingredients\">\r\n                    Ingredients(oddzielone przecinkiem)\r\n                </label>\r\n                <input\r\n                    formControlName=\"ingredients\"\r\n                    class=\"form-control ingredients-input\"\r\n                />\r\n            </div>\r\n            <div class=\"add-dish-footer\">\r\n                <button\r\n                    (click)=\"onShowHideAddDishForm()\"\r\n                    class=\"btn-action btn-close\"\r\n                >\r\n                    Powrót\r\n                </button>\r\n                <button\r\n                    [disabled]=\"addDishForm.invalid\"\r\n                    (click)=\"onDishSave()\"\r\n                    class=\"btn-action\"\r\n                >\r\n                    Dodaj danie\r\n                </button>\r\n            </div>\r\n            <div class=\"response-text\">{{ responseMessage }}</div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"main-container popup\" *ngIf=\"isDishesListOpen\">\r\n    <div class=\"dishes-list\">\r\n        <button class=\"btn-action btn-close\" (click)=\"onShowHideDishesList()\">X</button>\r\n        <div class=\"list-header\">Wybierz danie:</div>\r\n        <div class=\"list-data\" *ngFor=\"let dish of dishesList\">\r\n            <div class=\"cursor-pointer\" (click)=\"onSelectDish(dish)\">{{ dish.name }}</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"ingredient-list margin-top box-shadow cursor-pointer\" (click)=\"onOpenCloseIngredientList()\">\r\n    <div class=\"list-header\">\r\n        <span>Lista składników</span>\r\n        <span>\r\n            <img src=\"../../assets/icon-toggler-list.png\"/>\r\n        </span>\r\n    </div>\r\n    <ng-container *ngIf=\"isIngredientListOpen\" >\r\n        <div class=\"list-data\" *ngFor=\"let ingredient of ingredientsList | keyvalue\">\r\n            {{ ingredient.value }}x {{ ingredient.key }}\r\n        </div>\r\n    </ng-container>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MealsOverviewComponent } from '../meals-overview/meals-overview.component';\r\n\r\nconst mealsRoutes: Routes = [{\r\n  path: '',\r\n  component: MealsOverviewComponent\r\n}]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forChild(mealsRoutes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class MealsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MealsRoutingModule } from './meals-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MealsOverviewComponent } from '../meals-overview/meals-overview.component'\r\n\r\n@NgModule({\r\n  declarations: [MealsOverviewComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MealsRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [MealsOverviewComponent]\r\n})\r\nexport class MealsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MealsService {\r\n  private apiUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllMeals() {\r\n    return this.http.get(`${this.apiUrl}/get-meals`);\r\n  }\r\n\r\n  saveMealsOrUpdate(dailyMeals) {\r\n    return this.http.post(`${this.apiUrl}/save-meals-or-update`, dailyMeals, { observe: 'response' });\r\n  }\r\n\r\n  getIngredientList() {\r\n    return this.http.get(`${this.apiUrl}/ingredients`);\r\n  }\r\n\r\n  // do poprawy do dishes service\r\n  getAllDishes() {\r\n    return this.http.get(`${this.apiUrl}/get-dishes`);\r\n  }\r\n\r\n  addDish(dish) {\r\n    return this.http.post(`${this.apiUrl}/save-dish`, dish, { observe: 'response' });\r\n\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://192.168.0.76:10000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}